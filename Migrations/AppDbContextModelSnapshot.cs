// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore; // DbContext ve ModelBuilder için temel EF Core using'i
using Microsoft.EntityFrameworkCore.Infrastructure; // ModelSnapshot için gerekli
using Microsoft.EntityFrameworkCore.Metadata; // ModelBuilder.HasAnnotation için gerekli
using Microsoft.EntityFrameworkCore.Migrations; // ModelSnapshot sınıfı için gerekli
using Microsoft.EntityFrameworkCore.Storage.ValueConversion; // Value converters için gerekli
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata; // Npgsql specific extensions için gerekli
using tasinmazBackend.Data; // AppDbContext'in bulunduğu namespace
using tasinmazBackend.Entitiy; // Il, Ilce, Mahalle, Tasinmaz, User ve Log modellerinin bulunduğu varsayılan namespace

#nullable disable

namespace tasinmazBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                // ProductVersion'ı projenizdeki Microsoft.EntityFrameworkCore paketinin TAM versiyonuna göre ayarlayın.
                // Bu bilgiyi .csproj dosyanızdan veya NuGet Paket Yöneticisi'nden kontrol edebilirsiniz.
                // Örn: <PackageReference Include="Microsoft.EntityFrameworkCore.PostgreSQL" Version="8.0.7" /> ise buraya "8.0.7" yazın.
                .HasAnnotation("ProductVersion", "8.0.7") // Lütfen burayı kendi projenizin EF Core versiyonuna göre DÜZELTİN!
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            // Npgsql uzantıları için IdentityByDefaultColumns kullanımı
            // Eğer PostgreSQL kullanmıyorsanız bu satırı silebilirsiniz.
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("tasinmazBackend.Entitiy.Ilce", b => // Tam namespace belirtildi
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Ad")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<int>("IlId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("IlId");

                b.ToTable("Ilceler");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Log", b => // Log modelinin Entitiy namespace'inde olduğu varsayıldı
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("ActionType")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("IpAddress")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<int?>("UserId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("Logs");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Il", b => // Tam namespace belirtildi
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Ad")
                    .IsRequired()
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Iller");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Mahalle", b => // Tam namespace belirtildi
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Ad")
                    .HasColumnType("text");

                b.Property<int>("IlceId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("IlceId");

                b.ToTable("Mahalleler");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Tasinmaz", b => // Tam namespace belirtildi
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Ada")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Adres")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Koordinat")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<int>("MahalleId")
                    .HasColumnType("integer");

                b.Property<string>("Parsel")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<int>("UserId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("MahalleId");

                b.HasIndex("UserId");

                b.ToTable("Tasinmazlar");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.User", b => // User modelinin Entitiy namespace'inde olduğu varsayıldı
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Email")
                    .HasColumnType("text");

                b.Property<string>("Password")
                    .HasColumnType("text");

                b.Property<string>("Role")
                    .HasColumnType("text");

                b.Property<string>("UserName")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Ilce", b => // Tam namespace belirtildi
            {
                b.HasOne("tasinmazBackend.Entitiy.Il", "Il") // Tam namespace belirtildi
                    .WithMany()
                    .HasForeignKey("IlId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Il");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Log", b => // Tam namespace belirtildi
            {
                b.HasOne("tasinmazBackend.Entitiy.User", "User") // Tam namespace belirtildi (User'ın da Entitiy'de olduğu varsayıldı)
                    .WithMany()
                    .HasForeignKey("UserId");

                b.Navigation("User");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Mahalle", b => // Tam namespace belirtildi
            {
                b.HasOne("tasinmazBackend.Entitiy.Ilce", "Ilce") // Tam namespace belirtildi
                    .WithMany()
                    .HasForeignKey("IlceId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Ilce");
            });

            modelBuilder.Entity("tasinmazBackend.Entitiy.Tasinmaz", b => // Tam namespace belirtildi
            {
                b.HasOne("tasinmazBackend.Entitiy.Mahalle", "Mahalle") // Tam namespace belirtildi
                    .WithMany()
                    .HasForeignKey("MahalleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("tasinmazBackend.Entitiy.User", "User") // Tam namespace belirtildi (User'ın da Entitiy'de olduğu varsayıldı)
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Mahalle");

                b.Navigation("User");
            });
#pragma warning restore 612, 618
        }
    }
}
